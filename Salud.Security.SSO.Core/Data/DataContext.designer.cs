#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Salud.Security.SSO.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SSO")]
	internal partial class DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSSO_Messages_TargetTypes(SSO_Messages_TargetTypes instance);
    partial void UpdateSSO_Messages_TargetTypes(SSO_Messages_TargetTypes instance);
    partial void DeleteSSO_Messages_TargetTypes(SSO_Messages_TargetTypes instance);
    partial void InsertSSO_Messages_StateTypes(SSO_Messages_StateTypes instance);
    partial void UpdateSSO_Messages_StateTypes(SSO_Messages_StateTypes instance);
    partial void DeleteSSO_Messages_StateTypes(SSO_Messages_StateTypes instance);
    partial void InsertSSO_Messages_Targets(SSO_Messages_Targets instance);
    partial void UpdateSSO_Messages_Targets(SSO_Messages_Targets instance);
    partial void DeleteSSO_Messages_Targets(SSO_Messages_Targets instance);
    partial void InsertSSO_Messages_Types(SSO_Messages_Types instance);
    partial void UpdateSSO_Messages_Types(SSO_Messages_Types instance);
    partial void DeleteSSO_Messages_Types(SSO_Messages_Types instance);
    partial void InsertSSO_Roles(SSO_Roles instance);
    partial void UpdateSSO_Roles(SSO_Roles instance);
    partial void DeleteSSO_Roles(SSO_Roles instance);
    partial void InsertSSO_Messages_States(SSO_Messages_States instance);
    partial void UpdateSSO_Messages_States(SSO_Messages_States instance);
    partial void DeleteSSO_Messages_States(SSO_Messages_States instance);
    partial void InsertSSO_Messages(SSO_Messages instance);
    partial void UpdateSSO_Messages(SSO_Messages instance);
    partial void DeleteSSO_Messages(SSO_Messages instance);
    partial void InsertSSO_Modules(SSO_Modules instance);
    partial void UpdateSSO_Modules(SSO_Modules instance);
    partial void DeleteSSO_Modules(SSO_Modules instance);
    partial void InsertSSO_ModulePages(SSO_ModulePages instance);
    partial void UpdateSSO_ModulePages(SSO_ModulePages instance);
    partial void DeleteSSO_ModulePages(SSO_ModulePages instance);
    partial void InsertSSO_Applications(SSO_Applications instance);
    partial void UpdateSSO_Applications(SSO_Applications instance);
    partial void DeleteSSO_Applications(SSO_Applications instance);
    partial void InsertSSO_Sessions(SSO_Sessions instance);
    partial void UpdateSSO_Sessions(SSO_Sessions instance);
    partial void DeleteSSO_Sessions(SSO_Sessions instance);
    partial void InsertSSO_Permissions_Cache(SSO_Permissions_Cache instance);
    partial void UpdateSSO_Permissions_Cache(SSO_Permissions_Cache instance);
    partial void DeleteSSO_Permissions_Cache(SSO_Permissions_Cache instance);
    partial void InsertSSO_AccessLog(SSO_AccessLog instance);
    partial void UpdateSSO_AccessLog(SSO_AccessLog instance);
    partial void DeleteSSO_AccessLog(SSO_AccessLog instance);
    partial void InsertSSO_Messages_NotificationTypes(SSO_Messages_NotificationTypes instance);
    partial void UpdateSSO_Messages_NotificationTypes(SSO_Messages_NotificationTypes instance);
    partial void DeleteSSO_Messages_NotificationTypes(SSO_Messages_NotificationTypes instance);
    partial void InsertSSO_Messages_Notifications(SSO_Messages_Notifications instance);
    partial void UpdateSSO_Messages_Notifications(SSO_Messages_Notifications instance);
    partial void DeleteSSO_Messages_Notifications(SSO_Messages_Notifications instance);
    partial void InsertSSO_SMS_Log(SSO_SMS_Log instance);
    partial void UpdateSSO_SMS_Log(SSO_SMS_Log instance);
    partial void DeleteSSO_SMS_Log(SSO_SMS_Log instance);
    partial void InsertSSO_SMS_Carriers(SSO_SMS_Carriers instance);
    partial void UpdateSSO_SMS_Carriers(SSO_SMS_Carriers instance);
    partial void DeleteSSO_SMS_Carriers(SSO_SMS_Carriers instance);
    partial void InsertSSO_Users(SSO_Users instance);
    partial void UpdateSSO_Users(SSO_Users instance);
    partial void DeleteSSO_Users(SSO_Users instance);
    #endregion
		
		public DataContext() : 
				base(global::Salud.Security.SSO.Properties.Settings.Default.SSOConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SSO_Messages_TargetTypes> SSO_Messages_TargetTypes
		{
			get
			{
				return this.GetTable<SSO_Messages_TargetTypes>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Messages_StateTypes> SSO_Messages_StateTypes
		{
			get
			{
				return this.GetTable<SSO_Messages_StateTypes>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Messages_Targets> SSO_Messages_Targets
		{
			get
			{
				return this.GetTable<SSO_Messages_Targets>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Messages_Types> SSO_Messages_Types
		{
			get
			{
				return this.GetTable<SSO_Messages_Types>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Roles> SSO_Roles
		{
			get
			{
				return this.GetTable<SSO_Roles>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Messages_States> SSO_Messages_States
		{
			get
			{
				return this.GetTable<SSO_Messages_States>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Messages> SSO_Messages
		{
			get
			{
				return this.GetTable<SSO_Messages>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Modules> SSO_Modules
		{
			get
			{
				return this.GetTable<SSO_Modules>();
			}
		}
		
		public System.Data.Linq.Table<SSO_ModulePages> SSO_ModulePages
		{
			get
			{
				return this.GetTable<SSO_ModulePages>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Applications> SSO_Applications
		{
			get
			{
				return this.GetTable<SSO_Applications>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Sessions> SSO_Sessions
		{
			get
			{
				return this.GetTable<SSO_Sessions>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Permissions_Cache> SSO_Permissions_Cache
		{
			get
			{
				return this.GetTable<SSO_Permissions_Cache>();
			}
		}
		
		public System.Data.Linq.Table<SSO_AccessLog> SSO_AccessLog
		{
			get
			{
				return this.GetTable<SSO_AccessLog>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Messages_NotificationTypes> SSO_Messages_NotificationTypes
		{
			get
			{
				return this.GetTable<SSO_Messages_NotificationTypes>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Messages_Notifications> SSO_Messages_Notifications
		{
			get
			{
				return this.GetTable<SSO_Messages_Notifications>();
			}
		}
		
		public System.Data.Linq.Table<SSO_SMS_Log> SSO_SMS_Log
		{
			get
			{
				return this.GetTable<SSO_SMS_Log>();
			}
		}
		
		public System.Data.Linq.Table<SSO_SMS_Carriers> SSO_SMS_Carriers
		{
			get
			{
				return this.GetTable<SSO_SMS_Carriers>();
			}
		}
		
		public System.Data.Linq.Table<SSO_Users> SSO_Users
		{
			get
			{
				return this.GetTable<SSO_Users>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SSO_UserInRole", IsComposable=true)]
		public System.Nullable<int> SSO_UserInRole([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleId)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, roleId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SSO_QueueMessage")]
		public ISingleResult<sp_SSO_QueueMessageResult> sp_SSO_QueueMessage([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isHTML, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string subject, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string message, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> expiresOn, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> messageType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string notifications, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string targets, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> sendNow, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> outputResults)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isHTML, subject, message, expiresOn, messageType, notifications, targets, sendNow, outputResults);
			return ((ISingleResult<sp_SSO_QueueMessageResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.hsp_Common_LastUpdated", IsComposable=true)]
		public System.Nullable<System.DateTime> hsp_Common_LastUpdated([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string tableName)
		{
			return ((System.Nullable<System.DateTime>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tableName).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SSO_ObtenerEfectores")]
		public ISingleResult<SSO_ObtenerEfectoresResult> SSO_ObtenerEfectores([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idUsuario)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idUsuario);
			return ((ISingleResult<SSO_ObtenerEfectoresResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Messages_TargetTypes")]
	public partial class SSO_Messages_TargetTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<SSO_Messages_Targets> _SSO_Messages_Targets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public SSO_Messages_TargetTypes()
		{
			this._SSO_Messages_Targets = new EntitySet<SSO_Messages_Targets>(new Action<SSO_Messages_Targets>(this.attach_SSO_Messages_Targets), new Action<SSO_Messages_Targets>(this.detach_SSO_Messages_Targets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_TargetTypes_SSO_Messages_Targets", Storage="_SSO_Messages_Targets", ThisKey="id", OtherKey="targetType")]
		public EntitySet<SSO_Messages_Targets> SSO_Messages_Targets
		{
			get
			{
				return this._SSO_Messages_Targets;
			}
			set
			{
				this._SSO_Messages_Targets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSO_Messages_Targets(SSO_Messages_Targets entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages_TargetTypes = this;
		}
		
		private void detach_SSO_Messages_Targets(SSO_Messages_Targets entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages_TargetTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Messages_StateTypes")]
	public partial class SSO_Messages_StateTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<SSO_Messages_States> _SSO_Messages_States;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public SSO_Messages_StateTypes()
		{
			this._SSO_Messages_States = new EntitySet<SSO_Messages_States>(new Action<SSO_Messages_States>(this.attach_SSO_Messages_States), new Action<SSO_Messages_States>(this.detach_SSO_Messages_States));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_StateTypes_SSO_Messages_States", Storage="_SSO_Messages_States", ThisKey="id", OtherKey="idState")]
		public EntitySet<SSO_Messages_States> SSO_Messages_States
		{
			get
			{
				return this._SSO_Messages_States;
			}
			set
			{
				this._SSO_Messages_States.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSO_Messages_States(SSO_Messages_States entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages_StateTypes = this;
		}
		
		private void detach_SSO_Messages_States(SSO_Messages_States entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages_StateTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Messages_Targets")]
	public partial class SSO_Messages_Targets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMessage;
		
		private int _targetType;
		
		private int _target;
		
		private EntityRef<SSO_Messages_TargetTypes> _SSO_Messages_TargetTypes;
		
		private EntityRef<SSO_Messages> _SSO_Messages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMessageChanging(int value);
    partial void OnidMessageChanged();
    partial void OntargetTypeChanging(int value);
    partial void OntargetTypeChanged();
    partial void OntargetChanging(int value);
    partial void OntargetChanged();
    #endregion
		
		public SSO_Messages_Targets()
		{
			this._SSO_Messages_TargetTypes = default(EntityRef<SSO_Messages_TargetTypes>);
			this._SSO_Messages = default(EntityRef<SSO_Messages>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMessage", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idMessage
		{
			get
			{
				return this._idMessage;
			}
			set
			{
				if ((this._idMessage != value))
				{
					if (this._SSO_Messages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMessageChanging(value);
					this.SendPropertyChanging();
					this._idMessage = value;
					this.SendPropertyChanged("idMessage");
					this.OnidMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_targetType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int targetType
		{
			get
			{
				return this._targetType;
			}
			set
			{
				if ((this._targetType != value))
				{
					if (this._SSO_Messages_TargetTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntargetTypeChanging(value);
					this.SendPropertyChanging();
					this._targetType = value;
					this.SendPropertyChanged("targetType");
					this.OntargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_target", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int target
		{
			get
			{
				return this._target;
			}
			set
			{
				if ((this._target != value))
				{
					this.OntargetChanging(value);
					this.SendPropertyChanging();
					this._target = value;
					this.SendPropertyChanged("target");
					this.OntargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_TargetTypes_SSO_Messages_Targets", Storage="_SSO_Messages_TargetTypes", ThisKey="targetType", OtherKey="id", IsForeignKey=true)]
		public SSO_Messages_TargetTypes SSO_Messages_TargetTypes
		{
			get
			{
				return this._SSO_Messages_TargetTypes.Entity;
			}
			set
			{
				SSO_Messages_TargetTypes previousValue = this._SSO_Messages_TargetTypes.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Messages_TargetTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Messages_TargetTypes.Entity = null;
						previousValue.SSO_Messages_Targets.Remove(this);
					}
					this._SSO_Messages_TargetTypes.Entity = value;
					if ((value != null))
					{
						value.SSO_Messages_Targets.Add(this);
						this._targetType = value.id;
					}
					else
					{
						this._targetType = default(int);
					}
					this.SendPropertyChanged("SSO_Messages_TargetTypes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_SSO_Messages_Targets", Storage="_SSO_Messages", ThisKey="idMessage", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SSO_Messages SSO_Messages
		{
			get
			{
				return this._SSO_Messages.Entity;
			}
			set
			{
				SSO_Messages previousValue = this._SSO_Messages.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Messages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Messages.Entity = null;
						previousValue.SSO_Messages_Targets.Remove(this);
					}
					this._SSO_Messages.Entity = value;
					if ((value != null))
					{
						value.SSO_Messages_Targets.Add(this);
						this._idMessage = value.id;
					}
					else
					{
						this._idMessage = default(int);
					}
					this.SendPropertyChanged("SSO_Messages");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Messages_Types")]
	public partial class SSO_Messages_Types : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<SSO_Messages> _SSO_Messages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public SSO_Messages_Types()
		{
			this._SSO_Messages = new EntitySet<SSO_Messages>(new Action<SSO_Messages>(this.attach_SSO_Messages), new Action<SSO_Messages>(this.detach_SSO_Messages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_Types_SSO_Messages", Storage="_SSO_Messages", ThisKey="id", OtherKey="type")]
		public EntitySet<SSO_Messages> SSO_Messages
		{
			get
			{
				return this._SSO_Messages;
			}
			set
			{
				this._SSO_Messages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSO_Messages(SSO_Messages entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages_Types = this;
		}
		
		private void detach_SSO_Messages(SSO_Messages entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages_Types = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Roles")]
	public partial class SSO_Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _parent;
		
		private string _name;
		
		private bool _enabled;
		
		private EntitySet<SSO_Roles> _SSO_Roles2;
		
		private EntityRef<SSO_Roles> _SSO_Roles1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnparentChanging(System.Nullable<int> value);
    partial void OnparentChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    #endregion
		
		public SSO_Roles()
		{
			this._SSO_Roles2 = new EntitySet<SSO_Roles>(new Action<SSO_Roles>(this.attach_SSO_Roles2), new Action<SSO_Roles>(this.detach_SSO_Roles2));
			this._SSO_Roles1 = default(EntityRef<SSO_Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="Int")]
		public System.Nullable<int> parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					if (this._SSO_Roles1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Roles_SSO_Roles", Storage="_SSO_Roles2", ThisKey="id", OtherKey="parent")]
		public EntitySet<SSO_Roles> SSO_Roles2
		{
			get
			{
				return this._SSO_Roles2;
			}
			set
			{
				this._SSO_Roles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Roles_SSO_Roles", Storage="_SSO_Roles1", ThisKey="parent", OtherKey="id", IsForeignKey=true)]
		public SSO_Roles SSO_Roles1
		{
			get
			{
				return this._SSO_Roles1.Entity;
			}
			set
			{
				SSO_Roles previousValue = this._SSO_Roles1.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Roles1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Roles1.Entity = null;
						previousValue.SSO_Roles2.Remove(this);
					}
					this._SSO_Roles1.Entity = value;
					if ((value != null))
					{
						value.SSO_Roles2.Add(this);
						this._parent = value.id;
					}
					else
					{
						this._parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("SSO_Roles1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSO_Roles2(SSO_Roles entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Roles1 = this;
		}
		
		private void detach_SSO_Roles2(SSO_Roles entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Roles1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Messages_States")]
	public partial class SSO_Messages_States : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMessage;
		
		private int _idUser;
		
		private System.DateTime _updatedOn;
		
		private int _idState;
		
		private System.Nullable<System.DateTime> _rememberOn;
		
		private EntityRef<SSO_Messages_StateTypes> _SSO_Messages_StateTypes;
		
		private EntityRef<SSO_Messages> _SSO_Messages;
		
		private EntityRef<SSO_Users> _SSO_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMessageChanging(int value);
    partial void OnidMessageChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnupdatedOnChanging(System.DateTime value);
    partial void OnupdatedOnChanged();
    partial void OnidStateChanging(int value);
    partial void OnidStateChanged();
    partial void OnrememberOnChanging(System.Nullable<System.DateTime> value);
    partial void OnrememberOnChanged();
    #endregion
		
		public SSO_Messages_States()
		{
			this._SSO_Messages_StateTypes = default(EntityRef<SSO_Messages_StateTypes>);
			this._SSO_Messages = default(EntityRef<SSO_Messages>);
			this._SSO_Users = default(EntityRef<SSO_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMessage", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idMessage
		{
			get
			{
				return this._idMessage;
			}
			set
			{
				if ((this._idMessage != value))
				{
					if (this._SSO_Messages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMessageChanging(value);
					this.SendPropertyChanging();
					this._idMessage = value;
					this.SendPropertyChanged("idMessage");
					this.OnidMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._SSO_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime updatedOn
		{
			get
			{
				return this._updatedOn;
			}
			set
			{
				if ((this._updatedOn != value))
				{
					this.OnupdatedOnChanging(value);
					this.SendPropertyChanging();
					this._updatedOn = value;
					this.SendPropertyChanged("updatedOn");
					this.OnupdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idState", DbType="Int NOT NULL")]
		public int idState
		{
			get
			{
				return this._idState;
			}
			set
			{
				if ((this._idState != value))
				{
					if (this._SSO_Messages_StateTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidStateChanging(value);
					this.SendPropertyChanging();
					this._idState = value;
					this.SendPropertyChanged("idState");
					this.OnidStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rememberOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> rememberOn
		{
			get
			{
				return this._rememberOn;
			}
			set
			{
				if ((this._rememberOn != value))
				{
					this.OnrememberOnChanging(value);
					this.SendPropertyChanging();
					this._rememberOn = value;
					this.SendPropertyChanged("rememberOn");
					this.OnrememberOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_StateTypes_SSO_Messages_States", Storage="_SSO_Messages_StateTypes", ThisKey="idState", OtherKey="id", IsForeignKey=true)]
		public SSO_Messages_StateTypes SSO_Messages_StateTypes
		{
			get
			{
				return this._SSO_Messages_StateTypes.Entity;
			}
			set
			{
				SSO_Messages_StateTypes previousValue = this._SSO_Messages_StateTypes.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Messages_StateTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Messages_StateTypes.Entity = null;
						previousValue.SSO_Messages_States.Remove(this);
					}
					this._SSO_Messages_StateTypes.Entity = value;
					if ((value != null))
					{
						value.SSO_Messages_States.Add(this);
						this._idState = value.id;
					}
					else
					{
						this._idState = default(int);
					}
					this.SendPropertyChanged("SSO_Messages_StateTypes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_SSO_Messages_States", Storage="_SSO_Messages", ThisKey="idMessage", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SSO_Messages SSO_Messages
		{
			get
			{
				return this._SSO_Messages.Entity;
			}
			set
			{
				SSO_Messages previousValue = this._SSO_Messages.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Messages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Messages.Entity = null;
						previousValue.SSO_Messages_States.Remove(this);
					}
					this._SSO_Messages.Entity = value;
					if ((value != null))
					{
						value.SSO_Messages_States.Add(this);
						this._idMessage = value.id;
					}
					else
					{
						this._idMessage = default(int);
					}
					this.SendPropertyChanged("SSO_Messages");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Users_SSO_Messages_States", Storage="_SSO_Users", ThisKey="idUser", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SSO_Users SSO_Users
		{
			get
			{
				return this._SSO_Users.Entity;
			}
			set
			{
				SSO_Users previousValue = this._SSO_Users.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Users.Entity = null;
						previousValue.SSO_Messages_States.Remove(this);
					}
					this._SSO_Users.Entity = value;
					if ((value != null))
					{
						value.SSO_Messages_States.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(int);
					}
					this.SendPropertyChanged("SSO_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Messages")]
	public partial class SSO_Messages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _message;
		
		private int _type;
		
		private System.DateTime _date;
		
		private System.Nullable<System.DateTime> _expiresOn;
		
		private EntitySet<SSO_Messages_Targets> _SSO_Messages_Targets;
		
		private EntitySet<SSO_Messages_States> _SSO_Messages_States;
		
		private EntitySet<SSO_Messages_Notifications> _SSO_Messages_Notifications;
		
		private EntityRef<SSO_Messages_Types> _SSO_Messages_Types;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnexpiresOnChanging(System.Nullable<System.DateTime> value);
    partial void OnexpiresOnChanged();
    #endregion
		
		public SSO_Messages()
		{
			this._SSO_Messages_Targets = new EntitySet<SSO_Messages_Targets>(new Action<SSO_Messages_Targets>(this.attach_SSO_Messages_Targets), new Action<SSO_Messages_Targets>(this.detach_SSO_Messages_Targets));
			this._SSO_Messages_States = new EntitySet<SSO_Messages_States>(new Action<SSO_Messages_States>(this.attach_SSO_Messages_States), new Action<SSO_Messages_States>(this.detach_SSO_Messages_States));
			this._SSO_Messages_Notifications = new EntitySet<SSO_Messages_Notifications>(new Action<SSO_Messages_Notifications>(this.attach_SSO_Messages_Notifications), new Action<SSO_Messages_Notifications>(this.detach_SSO_Messages_Notifications));
			this._SSO_Messages_Types = default(EntityRef<SSO_Messages_Types>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					if (this._SSO_Messages_Types.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiresOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> expiresOn
		{
			get
			{
				return this._expiresOn;
			}
			set
			{
				if ((this._expiresOn != value))
				{
					this.OnexpiresOnChanging(value);
					this.SendPropertyChanging();
					this._expiresOn = value;
					this.SendPropertyChanged("expiresOn");
					this.OnexpiresOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_SSO_Messages_Targets", Storage="_SSO_Messages_Targets", ThisKey="id", OtherKey="idMessage")]
		public EntitySet<SSO_Messages_Targets> SSO_Messages_Targets
		{
			get
			{
				return this._SSO_Messages_Targets;
			}
			set
			{
				this._SSO_Messages_Targets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_SSO_Messages_States", Storage="_SSO_Messages_States", ThisKey="id", OtherKey="idMessage")]
		public EntitySet<SSO_Messages_States> SSO_Messages_States
		{
			get
			{
				return this._SSO_Messages_States;
			}
			set
			{
				this._SSO_Messages_States.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_SSO_Messages_Notifications", Storage="_SSO_Messages_Notifications", ThisKey="id", OtherKey="idMessage")]
		public EntitySet<SSO_Messages_Notifications> SSO_Messages_Notifications
		{
			get
			{
				return this._SSO_Messages_Notifications;
			}
			set
			{
				this._SSO_Messages_Notifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_Types_SSO_Messages", Storage="_SSO_Messages_Types", ThisKey="type", OtherKey="id", IsForeignKey=true)]
		public SSO_Messages_Types SSO_Messages_Types
		{
			get
			{
				return this._SSO_Messages_Types.Entity;
			}
			set
			{
				SSO_Messages_Types previousValue = this._SSO_Messages_Types.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Messages_Types.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Messages_Types.Entity = null;
						previousValue.SSO_Messages.Remove(this);
					}
					this._SSO_Messages_Types.Entity = value;
					if ((value != null))
					{
						value.SSO_Messages.Add(this);
						this._type = value.id;
					}
					else
					{
						this._type = default(int);
					}
					this.SendPropertyChanged("SSO_Messages_Types");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSO_Messages_Targets(SSO_Messages_Targets entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages = this;
		}
		
		private void detach_SSO_Messages_Targets(SSO_Messages_Targets entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages = null;
		}
		
		private void attach_SSO_Messages_States(SSO_Messages_States entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages = this;
		}
		
		private void detach_SSO_Messages_States(SSO_Messages_States entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages = null;
		}
		
		private void attach_SSO_Messages_Notifications(SSO_Messages_Notifications entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages = this;
		}
		
		private void detach_SSO_Messages_Notifications(SSO_Messages_Notifications entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Modules")]
	public partial class SSO_Modules : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _applicationId;
		
		private int _module;
		
		private string _name;
		
		private string _description;
		
		private bool _readonly;
		
		private bool _protected;
		
		private bool _needsView;
		
		private System.Nullable<int> _groupId;
		
		private System.Nullable<int> _interfase_priority;
		
		private bool _interfase_visible;
		
		private string _interfase_image;
		
		private System.Nullable<int> _Log_Group;
		
		private System.Nullable<int> _Log_Key;
		
		private EntitySet<SSO_ModulePages> _SSO_ModulePages;
		
		private EntityRef<SSO_Applications> _SSO_Applications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnapplicationIdChanging(int value);
    partial void OnapplicationIdChanged();
    partial void OnmoduleChanging(int value);
    partial void OnmoduleChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnreadonlyChanging(bool value);
    partial void OnreadonlyChanged();
    partial void OnprotectedChanging(bool value);
    partial void OnprotectedChanged();
    partial void OnneedsViewChanging(bool value);
    partial void OnneedsViewChanged();
    partial void OngroupIdChanging(System.Nullable<int> value);
    partial void OngroupIdChanged();
    partial void Oninterfase_priorityChanging(System.Nullable<int> value);
    partial void Oninterfase_priorityChanged();
    partial void Oninterfase_visibleChanging(bool value);
    partial void Oninterfase_visibleChanged();
    partial void Oninterfase_imageChanging(string value);
    partial void Oninterfase_imageChanged();
    partial void OnLog_GroupChanging(System.Nullable<int> value);
    partial void OnLog_GroupChanged();
    partial void OnLog_KeyChanging(System.Nullable<int> value);
    partial void OnLog_KeyChanged();
    #endregion
		
		public SSO_Modules()
		{
			this._SSO_ModulePages = new EntitySet<SSO_ModulePages>(new Action<SSO_ModulePages>(this.attach_SSO_ModulePages), new Action<SSO_ModulePages>(this.detach_SSO_ModulePages));
			this._SSO_Applications = default(EntityRef<SSO_Applications>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applicationId", DbType="Int NOT NULL")]
		public int applicationId
		{
			get
			{
				return this._applicationId;
			}
			set
			{
				if ((this._applicationId != value))
				{
					if (this._SSO_Applications.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnapplicationIdChanging(value);
					this.SendPropertyChanging();
					this._applicationId = value;
					this.SendPropertyChanged("applicationId");
					this.OnapplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module", DbType="Int NOT NULL")]
		public int module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="readonly", Storage="_readonly", DbType="Bit NOT NULL")]
		public bool @readonly
		{
			get
			{
				return this._readonly;
			}
			set
			{
				if ((this._readonly != value))
				{
					this.OnreadonlyChanging(value);
					this.SendPropertyChanging();
					this._readonly = value;
					this.SendPropertyChanged("@readonly");
					this.OnreadonlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="protected", Storage="_protected", DbType="Bit NOT NULL")]
		public bool @protected
		{
			get
			{
				return this._protected;
			}
			set
			{
				if ((this._protected != value))
				{
					this.OnprotectedChanging(value);
					this.SendPropertyChanging();
					this._protected = value;
					this.SendPropertyChanged("@protected");
					this.OnprotectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_needsView", DbType="Bit NOT NULL")]
		public bool needsView
		{
			get
			{
				return this._needsView;
			}
			set
			{
				if ((this._needsView != value))
				{
					this.OnneedsViewChanging(value);
					this.SendPropertyChanging();
					this._needsView = value;
					this.SendPropertyChanged("needsView");
					this.OnneedsViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupId", DbType="Int")]
		public System.Nullable<int> groupId
		{
			get
			{
				return this._groupId;
			}
			set
			{
				if ((this._groupId != value))
				{
					this.OngroupIdChanging(value);
					this.SendPropertyChanging();
					this._groupId = value;
					this.SendPropertyChanged("groupId");
					this.OngroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interfase_priority", DbType="Int")]
		public System.Nullable<int> interfase_priority
		{
			get
			{
				return this._interfase_priority;
			}
			set
			{
				if ((this._interfase_priority != value))
				{
					this.Oninterfase_priorityChanging(value);
					this.SendPropertyChanging();
					this._interfase_priority = value;
					this.SendPropertyChanged("interfase_priority");
					this.Oninterfase_priorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interfase_visible", DbType="Bit NOT NULL")]
		public bool interfase_visible
		{
			get
			{
				return this._interfase_visible;
			}
			set
			{
				if ((this._interfase_visible != value))
				{
					this.Oninterfase_visibleChanging(value);
					this.SendPropertyChanging();
					this._interfase_visible = value;
					this.SendPropertyChanged("interfase_visible");
					this.Oninterfase_visibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interfase_image", DbType="VarChar(255)")]
		public string interfase_image
		{
			get
			{
				return this._interfase_image;
			}
			set
			{
				if ((this._interfase_image != value))
				{
					this.Oninterfase_imageChanging(value);
					this.SendPropertyChanging();
					this._interfase_image = value;
					this.SendPropertyChanged("interfase_image");
					this.Oninterfase_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Log_Group", DbType="Int")]
		public System.Nullable<int> Log_Group
		{
			get
			{
				return this._Log_Group;
			}
			set
			{
				if ((this._Log_Group != value))
				{
					this.OnLog_GroupChanging(value);
					this.SendPropertyChanging();
					this._Log_Group = value;
					this.SendPropertyChanged("Log_Group");
					this.OnLog_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Log_Key", DbType="Int")]
		public System.Nullable<int> Log_Key
		{
			get
			{
				return this._Log_Key;
			}
			set
			{
				if ((this._Log_Key != value))
				{
					this.OnLog_KeyChanging(value);
					this.SendPropertyChanging();
					this._Log_Key = value;
					this.SendPropertyChanged("Log_Key");
					this.OnLog_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Modules_SSO_ModulePages", Storage="_SSO_ModulePages", ThisKey="id", OtherKey="moduleId")]
		public EntitySet<SSO_ModulePages> SSO_ModulePages
		{
			get
			{
				return this._SSO_ModulePages;
			}
			set
			{
				this._SSO_ModulePages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Applications_SSO_Modules", Storage="_SSO_Applications", ThisKey="applicationId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SSO_Applications SSO_Applications
		{
			get
			{
				return this._SSO_Applications.Entity;
			}
			set
			{
				SSO_Applications previousValue = this._SSO_Applications.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Applications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Applications.Entity = null;
						previousValue.SSO_Modules.Remove(this);
					}
					this._SSO_Applications.Entity = value;
					if ((value != null))
					{
						value.SSO_Modules.Add(this);
						this._applicationId = value.id;
					}
					else
					{
						this._applicationId = default(int);
					}
					this.SendPropertyChanged("SSO_Applications");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSO_ModulePages(SSO_ModulePages entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Modules = this;
		}
		
		private void detach_SSO_ModulePages(SSO_ModulePages entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Modules = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_ModulePages")]
	public partial class SSO_ModulePages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _page;
		
		private int _moduleId;
		
		private bool _mainPage;
		
		private string _description;
		
		private EntityRef<SSO_Modules> _SSO_Modules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpageChanging(string value);
    partial void OnpageChanged();
    partial void OnmoduleIdChanging(int value);
    partial void OnmoduleIdChanged();
    partial void OnmainPageChanging(bool value);
    partial void OnmainPageChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public SSO_ModulePages()
		{
			this._SSO_Modules = default(EntityRef<SSO_Modules>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string page
		{
			get
			{
				return this._page;
			}
			set
			{
				if ((this._page != value))
				{
					this.OnpageChanging(value);
					this.SendPropertyChanging();
					this._page = value;
					this.SendPropertyChanged("page");
					this.OnpageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moduleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int moduleId
		{
			get
			{
				return this._moduleId;
			}
			set
			{
				if ((this._moduleId != value))
				{
					if (this._SSO_Modules.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmoduleIdChanging(value);
					this.SendPropertyChanging();
					this._moduleId = value;
					this.SendPropertyChanged("moduleId");
					this.OnmoduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mainPage", DbType="Bit NOT NULL")]
		public bool mainPage
		{
			get
			{
				return this._mainPage;
			}
			set
			{
				if ((this._mainPage != value))
				{
					this.OnmainPageChanging(value);
					this.SendPropertyChanging();
					this._mainPage = value;
					this.SendPropertyChanged("mainPage");
					this.OnmainPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Modules_SSO_ModulePages", Storage="_SSO_Modules", ThisKey="moduleId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SSO_Modules SSO_Modules
		{
			get
			{
				return this._SSO_Modules.Entity;
			}
			set
			{
				SSO_Modules previousValue = this._SSO_Modules.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Modules.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Modules.Entity = null;
						previousValue.SSO_ModulePages.Remove(this);
					}
					this._SSO_Modules.Entity = value;
					if ((value != null))
					{
						value.SSO_ModulePages.Add(this);
						this._moduleId = value.id;
					}
					else
					{
						this._moduleId = default(int);
					}
					this.SendPropertyChanged("SSO_Modules");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Applications")]
	public partial class SSO_Applications : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _executable;
		
		private string _url;
		
		private bool _intefase_visible;
		
		private string _version;
		
		private EntitySet<SSO_Modules> _SSO_Modules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnexecutableChanging(string value);
    partial void OnexecutableChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void Onintefase_visibleChanging(bool value);
    partial void Onintefase_visibleChanged();
    partial void OnversionChanging(string value);
    partial void OnversionChanged();
    #endregion
		
		public SSO_Applications()
		{
			this._SSO_Modules = new EntitySet<SSO_Modules>(new Action<SSO_Modules>(this.attach_SSO_Modules), new Action<SSO_Modules>(this.detach_SSO_Modules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_executable", DbType="VarChar(255)")]
		public string executable
		{
			get
			{
				return this._executable;
			}
			set
			{
				if ((this._executable != value))
				{
					this.OnexecutableChanging(value);
					this.SendPropertyChanging();
					this._executable = value;
					this.SendPropertyChanged("executable");
					this.OnexecutableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(255)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intefase_visible", DbType="Bit NOT NULL")]
		public bool intefase_visible
		{
			get
			{
				return this._intefase_visible;
			}
			set
			{
				if ((this._intefase_visible != value))
				{
					this.Onintefase_visibleChanging(value);
					this.SendPropertyChanging();
					this._intefase_visible = value;
					this.SendPropertyChanged("intefase_visible");
					this.Onintefase_visibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="VarChar(50)")]
		public string version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Applications_SSO_Modules", Storage="_SSO_Modules", ThisKey="id", OtherKey="applicationId")]
		public EntitySet<SSO_Modules> SSO_Modules
		{
			get
			{
				return this._SSO_Modules;
			}
			set
			{
				this._SSO_Modules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSO_Modules(SSO_Modules entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Applications = this;
		}
		
		private void detach_SSO_Modules(SSO_Modules entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Applications = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Sessions")]
	public partial class SSO_Sessions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _userId;
		
		private int _timeout;
		
		private System.DateTime _lasttime;
		
		private bool _locked;
		
		private string _userIP;
		
		private int _idEfector;
		
		private int _idEfectorRol;
		
		private EntityRef<SSO_Users> _SSO_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OntimeoutChanging(int value);
    partial void OntimeoutChanged();
    partial void OnlasttimeChanging(System.DateTime value);
    partial void OnlasttimeChanged();
    partial void OnlockedChanging(bool value);
    partial void OnlockedChanged();
    partial void OnuserIPChanging(string value);
    partial void OnuserIPChanged();
    partial void OnidEfectorChanging(int value);
    partial void OnidEfectorChanged();
    partial void OnidEfectorRolChanging(int value);
    partial void OnidEfectorRolChanged();
    #endregion
		
		public SSO_Sessions()
		{
			this._SSO_Users = default(EntityRef<SSO_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(512) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._SSO_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeout", DbType="Int NOT NULL")]
		public int timeout
		{
			get
			{
				return this._timeout;
			}
			set
			{
				if ((this._timeout != value))
				{
					this.OntimeoutChanging(value);
					this.SendPropertyChanging();
					this._timeout = value;
					this.SendPropertyChanged("timeout");
					this.OntimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lasttime", DbType="DateTime NOT NULL")]
		public System.DateTime lasttime
		{
			get
			{
				return this._lasttime;
			}
			set
			{
				if ((this._lasttime != value))
				{
					this.OnlasttimeChanging(value);
					this.SendPropertyChanging();
					this._lasttime = value;
					this.SendPropertyChanged("lasttime");
					this.OnlasttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locked", DbType="Bit NOT NULL")]
		public bool locked
		{
			get
			{
				return this._locked;
			}
			set
			{
				if ((this._locked != value))
				{
					this.OnlockedChanging(value);
					this.SendPropertyChanging();
					this._locked = value;
					this.SendPropertyChanged("locked");
					this.OnlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userIP", DbType="VarChar(50)")]
		public string userIP
		{
			get
			{
				return this._userIP;
			}
			set
			{
				if ((this._userIP != value))
				{
					this.OnuserIPChanging(value);
					this.SendPropertyChanging();
					this._userIP = value;
					this.SendPropertyChanged("userIP");
					this.OnuserIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEfector", DbType="int")]
		public int idEfector
		{
			get
			{
				return this._idEfector;
			}
			set
			{
				if ((this._idEfector != value))
				{
					this.OnidEfectorChanging(value);
					this.SendPropertyChanging();
					this._idEfector = value;
					this.SendPropertyChanged("idEfector");
					this.OnidEfectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEfectorRol", DbType="int")]
		public int idEfectorRol
		{
			get
			{
				return this._idEfectorRol;
			}
			set
			{
				if ((this._idEfectorRol != value))
				{
					this.OnidEfectorRolChanging(value);
					this.SendPropertyChanging();
					this._idEfectorRol = value;
					this.SendPropertyChanged("idEfectorRol");
					this.OnidEfectorRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Users_SSO_Sessions", Storage="_SSO_Users", ThisKey="userId", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SSO_Users SSO_Users
		{
			get
			{
				return this._SSO_Users.Entity;
			}
			set
			{
				SSO_Users previousValue = this._SSO_Users.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Users.Entity = null;
						previousValue.SSO_Sessions.Remove(this);
					}
					this._SSO_Users.Entity = value;
					if ((value != null))
					{
						value.SSO_Sessions.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("SSO_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Permissions_Cache")]
	public partial class SSO_Permissions_Cache : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _autoId;
		
		private int _userId;
		
		private int _applicationId;
		
		private int _targetType;
		
		private int _target;
		
		private bool _inherited;
		
		private int _roleId;
		
		private int _groupId;
		
		private int _roleDepthFromUser;
		
		private bool _allow;
		
		private bool _readonly;
		
		private System.Nullable<System.DateTime> _endDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnautoIdChanging(int value);
    partial void OnautoIdChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnapplicationIdChanging(int value);
    partial void OnapplicationIdChanged();
    partial void OntargetTypeChanging(int value);
    partial void OntargetTypeChanged();
    partial void OntargetChanging(int value);
    partial void OntargetChanged();
    partial void OninheritedChanging(bool value);
    partial void OninheritedChanged();
    partial void OnroleIdChanging(int value);
    partial void OnroleIdChanged();
    partial void OngroupIdChanging(int value);
    partial void OngroupIdChanged();
    partial void OnroleDepthFromUserChanging(int value);
    partial void OnroleDepthFromUserChanged();
    partial void OnallowChanging(bool value);
    partial void OnallowChanged();
    partial void OnreadonlyChanging(bool value);
    partial void OnreadonlyChanged();
    partial void OnendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnendDateChanged();
    #endregion
		
		public SSO_Permissions_Cache()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autoId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int autoId
		{
			get
			{
				return this._autoId;
			}
			set
			{
				if ((this._autoId != value))
				{
					this.OnautoIdChanging(value);
					this.SendPropertyChanging();
					this._autoId = value;
					this.SendPropertyChanged("autoId");
					this.OnautoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_applicationId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int applicationId
		{
			get
			{
				return this._applicationId;
			}
			set
			{
				if ((this._applicationId != value))
				{
					this.OnapplicationIdChanging(value);
					this.SendPropertyChanging();
					this._applicationId = value;
					this.SendPropertyChanged("applicationId");
					this.OnapplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_targetType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int targetType
		{
			get
			{
				return this._targetType;
			}
			set
			{
				if ((this._targetType != value))
				{
					this.OntargetTypeChanging(value);
					this.SendPropertyChanging();
					this._targetType = value;
					this.SendPropertyChanged("targetType");
					this.OntargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_target", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int target
		{
			get
			{
				return this._target;
			}
			set
			{
				if ((this._target != value))
				{
					this.OntargetChanging(value);
					this.SendPropertyChanging();
					this._target = value;
					this.SendPropertyChanged("target");
					this.OntargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inherited", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool inherited
		{
			get
			{
				return this._inherited;
			}
			set
			{
				if ((this._inherited != value))
				{
					this.OninheritedChanging(value);
					this.SendPropertyChanging();
					this._inherited = value;
					this.SendPropertyChanged("inherited");
					this.OninheritedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int groupId
		{
			get
			{
				return this._groupId;
			}
			set
			{
				if ((this._groupId != value))
				{
					this.OngroupIdChanging(value);
					this.SendPropertyChanging();
					this._groupId = value;
					this.SendPropertyChanged("groupId");
					this.OngroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleDepthFromUser", DbType="Int NOT NULL")]
		public int roleDepthFromUser
		{
			get
			{
				return this._roleDepthFromUser;
			}
			set
			{
				if ((this._roleDepthFromUser != value))
				{
					this.OnroleDepthFromUserChanging(value);
					this.SendPropertyChanging();
					this._roleDepthFromUser = value;
					this.SendPropertyChanged("roleDepthFromUser");
					this.OnroleDepthFromUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allow", DbType="Bit NOT NULL")]
		public bool allow
		{
			get
			{
				return this._allow;
			}
			set
			{
				if ((this._allow != value))
				{
					this.OnallowChanging(value);
					this.SendPropertyChanging();
					this._allow = value;
					this.SendPropertyChanged("allow");
					this.OnallowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="readonly", Storage="_readonly", DbType="Bit NOT NULL")]
		public bool @readonly
		{
			get
			{
				return this._readonly;
			}
			set
			{
				if ((this._readonly != value))
				{
					this.OnreadonlyChanging(value);
					this.SendPropertyChanging();
					this._readonly = value;
					this.SendPropertyChanged("@readonly");
					this.OnreadonlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnendDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("endDate");
					this.OnendDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_AccessLog")]
	public partial class SSO_AccessLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _moduleId;
		
		private System.Nullable<int> _viewId;
		
		private int _userId;
		
		private System.DateTime _timeIn;
		
		private System.Nullable<System.DateTime> _timeOut;
		
		private string _description;
		
		private System.Nullable<bool> _result;
		
		private string _externalKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmoduleIdChanging(int value);
    partial void OnmoduleIdChanged();
    partial void OnviewIdChanging(System.Nullable<int> value);
    partial void OnviewIdChanged();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OntimeInChanging(System.DateTime value);
    partial void OntimeInChanged();
    partial void OntimeOutChanging(System.Nullable<System.DateTime> value);
    partial void OntimeOutChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnresultChanging(System.Nullable<bool> value);
    partial void OnresultChanged();
    partial void OnexternalKeyChanging(string value);
    partial void OnexternalKeyChanged();
    #endregion
		
		public SSO_AccessLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moduleId", DbType="Int NOT NULL")]
		public int moduleId
		{
			get
			{
				return this._moduleId;
			}
			set
			{
				if ((this._moduleId != value))
				{
					this.OnmoduleIdChanging(value);
					this.SendPropertyChanging();
					this._moduleId = value;
					this.SendPropertyChanged("moduleId");
					this.OnmoduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_viewId", DbType="Int")]
		public System.Nullable<int> viewId
		{
			get
			{
				return this._viewId;
			}
			set
			{
				if ((this._viewId != value))
				{
					this.OnviewIdChanging(value);
					this.SendPropertyChanging();
					this._viewId = value;
					this.SendPropertyChanged("viewId");
					this.OnviewIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL")]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeIn", DbType="DateTime NOT NULL")]
		public System.DateTime timeIn
		{
			get
			{
				return this._timeIn;
			}
			set
			{
				if ((this._timeIn != value))
				{
					this.OntimeInChanging(value);
					this.SendPropertyChanging();
					this._timeIn = value;
					this.SendPropertyChanged("timeIn");
					this.OntimeInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeOut
		{
			get
			{
				return this._timeOut;
			}
			set
			{
				if ((this._timeOut != value))
				{
					this.OntimeOutChanging(value);
					this.SendPropertyChanging();
					this._timeOut = value;
					this.SendPropertyChanged("timeOut");
					this.OntimeOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="Bit")]
		public System.Nullable<bool> result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_externalKey", DbType="VarChar(500)")]
		public string externalKey
		{
			get
			{
				return this._externalKey;
			}
			set
			{
				if ((this._externalKey != value))
				{
					this.OnexternalKeyChanging(value);
					this.SendPropertyChanging();
					this._externalKey = value;
					this.SendPropertyChanged("externalKey");
					this.OnexternalKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Messages_NotificationTypes")]
	public partial class SSO_Messages_NotificationTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<SSO_Messages_Notifications> _SSO_Messages_Notifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public SSO_Messages_NotificationTypes()
		{
			this._SSO_Messages_Notifications = new EntitySet<SSO_Messages_Notifications>(new Action<SSO_Messages_Notifications>(this.attach_SSO_Messages_Notifications), new Action<SSO_Messages_Notifications>(this.detach_SSO_Messages_Notifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_NotificationTypes_SSO_Messages_Notifications", Storage="_SSO_Messages_Notifications", ThisKey="id", OtherKey="notificationType")]
		public EntitySet<SSO_Messages_Notifications> SSO_Messages_Notifications
		{
			get
			{
				return this._SSO_Messages_Notifications;
			}
			set
			{
				this._SSO_Messages_Notifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSO_Messages_Notifications(SSO_Messages_Notifications entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages_NotificationTypes = this;
		}
		
		private void detach_SSO_Messages_Notifications(SSO_Messages_Notifications entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Messages_NotificationTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Messages_Notifications")]
	public partial class SSO_Messages_Notifications : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMessage;
		
		private int _notificationType;
		
		private EntityRef<SSO_Messages> _SSO_Messages;
		
		private EntityRef<SSO_Messages_NotificationTypes> _SSO_Messages_NotificationTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMessageChanging(int value);
    partial void OnidMessageChanged();
    partial void OnnotificationTypeChanging(int value);
    partial void OnnotificationTypeChanged();
    #endregion
		
		public SSO_Messages_Notifications()
		{
			this._SSO_Messages = default(EntityRef<SSO_Messages>);
			this._SSO_Messages_NotificationTypes = default(EntityRef<SSO_Messages_NotificationTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMessage", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idMessage
		{
			get
			{
				return this._idMessage;
			}
			set
			{
				if ((this._idMessage != value))
				{
					if (this._SSO_Messages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMessageChanging(value);
					this.SendPropertyChanging();
					this._idMessage = value;
					this.SendPropertyChanged("idMessage");
					this.OnidMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notificationType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int notificationType
		{
			get
			{
				return this._notificationType;
			}
			set
			{
				if ((this._notificationType != value))
				{
					if (this._SSO_Messages_NotificationTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnotificationTypeChanging(value);
					this.SendPropertyChanging();
					this._notificationType = value;
					this.SendPropertyChanged("notificationType");
					this.OnnotificationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_SSO_Messages_Notifications", Storage="_SSO_Messages", ThisKey="idMessage", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SSO_Messages SSO_Messages
		{
			get
			{
				return this._SSO_Messages.Entity;
			}
			set
			{
				SSO_Messages previousValue = this._SSO_Messages.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Messages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Messages.Entity = null;
						previousValue.SSO_Messages_Notifications.Remove(this);
					}
					this._SSO_Messages.Entity = value;
					if ((value != null))
					{
						value.SSO_Messages_Notifications.Add(this);
						this._idMessage = value.id;
					}
					else
					{
						this._idMessage = default(int);
					}
					this.SendPropertyChanged("SSO_Messages");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Messages_NotificationTypes_SSO_Messages_Notifications", Storage="_SSO_Messages_NotificationTypes", ThisKey="notificationType", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SSO_Messages_NotificationTypes SSO_Messages_NotificationTypes
		{
			get
			{
				return this._SSO_Messages_NotificationTypes.Entity;
			}
			set
			{
				SSO_Messages_NotificationTypes previousValue = this._SSO_Messages_NotificationTypes.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Messages_NotificationTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Messages_NotificationTypes.Entity = null;
						previousValue.SSO_Messages_Notifications.Remove(this);
					}
					this._SSO_Messages_NotificationTypes.Entity = value;
					if ((value != null))
					{
						value.SSO_Messages_Notifications.Add(this);
						this._notificationType = value.id;
					}
					else
					{
						this._notificationType = default(int);
					}
					this.SendPropertyChanged("SSO_Messages_NotificationTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_SMS_Log")]
	public partial class SSO_SMS_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _datetime;
		
		private string _text;
		
		private string _mobile;
		
		private int _idCarrier;
		
		private string _result;
		
		private System.Nullable<int> _sourceUserId;
		
		private EntityRef<SSO_SMS_Carriers> _SSO_SMS_Carriers;
		
		private EntityRef<SSO_Users> _SSO_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndatetimeChanging(System.DateTime value);
    partial void OndatetimeChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnidCarrierChanging(int value);
    partial void OnidCarrierChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnsourceUserIdChanging(System.Nullable<int> value);
    partial void OnsourceUserIdChanged();
    #endregion
		
		public SSO_SMS_Log()
		{
			this._SSO_SMS_Carriers = default(EntityRef<SSO_SMS_Carriers>);
			this._SSO_Users = default(EntityRef<SSO_Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime datetime
		{
			get
			{
				return this._datetime;
			}
			set
			{
				if ((this._datetime != value))
				{
					this.OndatetimeChanging(value);
					this.SendPropertyChanging();
					this._datetime = value;
					this.SendPropertyChanged("datetime");
					this.OndatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCarrier", DbType="Int NOT NULL")]
		public int idCarrier
		{
			get
			{
				return this._idCarrier;
			}
			set
			{
				if ((this._idCarrier != value))
				{
					if (this._SSO_SMS_Carriers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCarrierChanging(value);
					this.SendPropertyChanging();
					this._idCarrier = value;
					this.SendPropertyChanged("idCarrier");
					this.OnidCarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sourceUserId", DbType="Int")]
		public System.Nullable<int> sourceUserId
		{
			get
			{
				return this._sourceUserId;
			}
			set
			{
				if ((this._sourceUserId != value))
				{
					if (this._SSO_Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsourceUserIdChanging(value);
					this.SendPropertyChanging();
					this._sourceUserId = value;
					this.SendPropertyChanged("sourceUserId");
					this.OnsourceUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_SMS_Carriers_SSO_SMS_Log", Storage="_SSO_SMS_Carriers", ThisKey="idCarrier", OtherKey="id", IsForeignKey=true)]
		public SSO_SMS_Carriers SSO_SMS_Carriers
		{
			get
			{
				return this._SSO_SMS_Carriers.Entity;
			}
			set
			{
				SSO_SMS_Carriers previousValue = this._SSO_SMS_Carriers.Entity;
				if (((previousValue != value) 
							|| (this._SSO_SMS_Carriers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_SMS_Carriers.Entity = null;
						previousValue.SSO_SMS_Log.Remove(this);
					}
					this._SSO_SMS_Carriers.Entity = value;
					if ((value != null))
					{
						value.SSO_SMS_Log.Add(this);
						this._idCarrier = value.id;
					}
					else
					{
						this._idCarrier = default(int);
					}
					this.SendPropertyChanged("SSO_SMS_Carriers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Users_SSO_SMS_Log", Storage="_SSO_Users", ThisKey="sourceUserId", OtherKey="id", IsForeignKey=true)]
		public SSO_Users SSO_Users
		{
			get
			{
				return this._SSO_Users.Entity;
			}
			set
			{
				SSO_Users previousValue = this._SSO_Users.Entity;
				if (((previousValue != value) 
							|| (this._SSO_Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_Users.Entity = null;
						previousValue.SSO_SMS_Log.Remove(this);
					}
					this._SSO_Users.Entity = value;
					if ((value != null))
					{
						value.SSO_SMS_Log.Add(this);
						this._sourceUserId = value.id;
					}
					else
					{
						this._sourceUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SSO_Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_SMS_Carriers")]
	public partial class SSO_SMS_Carriers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private EntitySet<SSO_SMS_Log> _SSO_SMS_Log;
		
		private EntitySet<SSO_Users> _SSO_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public SSO_SMS_Carriers()
		{
			this._SSO_SMS_Log = new EntitySet<SSO_SMS_Log>(new Action<SSO_SMS_Log>(this.attach_SSO_SMS_Log), new Action<SSO_SMS_Log>(this.detach_SSO_SMS_Log));
			this._SSO_Users = new EntitySet<SSO_Users>(new Action<SSO_Users>(this.attach_SSO_Users), new Action<SSO_Users>(this.detach_SSO_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_SMS_Carriers_SSO_SMS_Log", Storage="_SSO_SMS_Log", ThisKey="id", OtherKey="idCarrier")]
		public EntitySet<SSO_SMS_Log> SSO_SMS_Log
		{
			get
			{
				return this._SSO_SMS_Log;
			}
			set
			{
				this._SSO_SMS_Log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_SMS_Carriers_SSO_Users", Storage="_SSO_Users", ThisKey="id", OtherKey="idCarrier")]
		public EntitySet<SSO_Users> SSO_Users
		{
			get
			{
				return this._SSO_Users;
			}
			set
			{
				this._SSO_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSO_SMS_Log(SSO_SMS_Log entity)
		{
			this.SendPropertyChanging();
			entity.SSO_SMS_Carriers = this;
		}
		
		private void detach_SSO_SMS_Log(SSO_SMS_Log entity)
		{
			this.SendPropertyChanging();
			entity.SSO_SMS_Carriers = null;
		}
		
		private void attach_SSO_Users(SSO_Users entity)
		{
			this.SendPropertyChanging();
			entity.SSO_SMS_Carriers = this;
		}
		
		private void detach_SSO_Users(SSO_Users entity)
		{
			this.SendPropertyChanging();
			entity.SSO_SMS_Carriers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSO_Users")]
	public partial class SSO_Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private string _name;
		
		private string _surname;
		
		private bool _enabled;
		
		private string _description;
		
		private string _email;
		
		private string _mobile;
		
		private System.Nullable<int> _idCarrier;
		
		private object _external_id;
		
		private bool _locked;
		
		private System.Nullable<System.DateTime> _locked_since;
		
		private int _password_retry;
		
		private bool _must_change_password;
		
		private System.Nullable<System.DateTime> _permissions_updatedOn;
		
		private System.Nullable<int> _documento;
		
		private string _legajo;
		
		private string _observacion;
		
		private EntitySet<SSO_Messages_States> _SSO_Messages_States;
		
		private EntitySet<SSO_Sessions> _SSO_Sessions;
		
		private EntitySet<SSO_SMS_Log> _SSO_SMS_Log;
		
		private EntityRef<SSO_SMS_Carriers> _SSO_SMS_Carriers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnidCarrierChanging(System.Nullable<int> value);
    partial void OnidCarrierChanged();
    partial void Onexternal_idChanging(object value);
    partial void Onexternal_idChanged();
    partial void OnlockedChanging(bool value);
    partial void OnlockedChanged();
    partial void Onlocked_sinceChanging(System.Nullable<System.DateTime> value);
    partial void Onlocked_sinceChanged();
    partial void Onpassword_retryChanging(int value);
    partial void Onpassword_retryChanged();
    partial void Onmust_change_passwordChanging(bool value);
    partial void Onmust_change_passwordChanged();
    partial void Onpermissions_updatedOnChanging(System.Nullable<System.DateTime> value);
    partial void Onpermissions_updatedOnChanged();
    partial void OndocumentoChanging(System.Nullable<int> value);
    partial void OndocumentoChanged();
    partial void OnlegajoChanging(string value);
    partial void OnlegajoChanged();
    partial void OnobservacionChanging(string value);
    partial void OnobservacionChanged();
    #endregion
		
		public SSO_Users()
		{
			this._SSO_Messages_States = new EntitySet<SSO_Messages_States>(new Action<SSO_Messages_States>(this.attach_SSO_Messages_States), new Action<SSO_Messages_States>(this.detach_SSO_Messages_States));
			this._SSO_Sessions = new EntitySet<SSO_Sessions>(new Action<SSO_Sessions>(this.attach_SSO_Sessions), new Action<SSO_Sessions>(this.detach_SSO_Sessions));
			this._SSO_SMS_Log = new EntitySet<SSO_SMS_Log>(new Action<SSO_SMS_Log>(this.attach_SSO_SMS_Log), new Action<SSO_SMS_Log>(this.detach_SSO_SMS_Log));
			this._SSO_SMS_Carriers = default(EntityRef<SSO_SMS_Carriers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="VarChar(200)")]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCarrier", DbType="Int")]
		public System.Nullable<int> idCarrier
		{
			get
			{
				return this._idCarrier;
			}
			set
			{
				if ((this._idCarrier != value))
				{
					if (this._SSO_SMS_Carriers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCarrierChanging(value);
					this.SendPropertyChanging();
					this._idCarrier = value;
					this.SendPropertyChanged("idCarrier");
					this.OnidCarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_external_id", DbType="Variant", UpdateCheck=UpdateCheck.Never)]
		public object external_id
		{
			get
			{
				return this._external_id;
			}
			set
			{
				if ((this._external_id != value))
				{
					this.Onexternal_idChanging(value);
					this.SendPropertyChanging();
					this._external_id = value;
					this.SendPropertyChanged("external_id");
					this.Onexternal_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locked", DbType="Bit NOT NULL")]
		public bool locked
		{
			get
			{
				return this._locked;
			}
			set
			{
				if ((this._locked != value))
				{
					this.OnlockedChanging(value);
					this.SendPropertyChanging();
					this._locked = value;
					this.SendPropertyChanged("locked");
					this.OnlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locked_since", DbType="DateTime")]
		public System.Nullable<System.DateTime> locked_since
		{
			get
			{
				return this._locked_since;
			}
			set
			{
				if ((this._locked_since != value))
				{
					this.Onlocked_sinceChanging(value);
					this.SendPropertyChanging();
					this._locked_since = value;
					this.SendPropertyChanged("locked_since");
					this.Onlocked_sinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_retry", DbType="Int NOT NULL")]
		public int password_retry
		{
			get
			{
				return this._password_retry;
			}
			set
			{
				if ((this._password_retry != value))
				{
					this.Onpassword_retryChanging(value);
					this.SendPropertyChanging();
					this._password_retry = value;
					this.SendPropertyChanged("password_retry");
					this.Onpassword_retryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_must_change_password", DbType="Bit NOT NULL")]
		public bool must_change_password
		{
			get
			{
				return this._must_change_password;
			}
			set
			{
				if ((this._must_change_password != value))
				{
					this.Onmust_change_passwordChanging(value);
					this.SendPropertyChanging();
					this._must_change_password = value;
					this.SendPropertyChanged("must_change_password");
					this.Onmust_change_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissions_updatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> permissions_updatedOn
		{
			get
			{
				return this._permissions_updatedOn;
			}
			set
			{
				if ((this._permissions_updatedOn != value))
				{
					this.Onpermissions_updatedOnChanging(value);
					this.SendPropertyChanging();
					this._permissions_updatedOn = value;
					this.SendPropertyChanged("permissions_updatedOn");
					this.Onpermissions_updatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documento", DbType="Int")]
		public System.Nullable<int> documento
		{
			get
			{
				return this._documento;
			}
			set
			{
				if ((this._documento != value))
				{
					this.OndocumentoChanging(value);
					this.SendPropertyChanging();
					this._documento = value;
					this.SendPropertyChanged("documento");
					this.OndocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_legajo", DbType="VarChar(50)")]
		public string legajo
		{
			get
			{
				return this._legajo;
			}
			set
			{
				if ((this._legajo != value))
				{
					this.OnlegajoChanging(value);
					this.SendPropertyChanging();
					this._legajo = value;
					this.SendPropertyChanged("legajo");
					this.OnlegajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_observacion", DbType="VarChar(MAX)")]
		public string observacion
		{
			get
			{
				return this._observacion;
			}
			set
			{
				if ((this._observacion != value))
				{
					this.OnobservacionChanging(value);
					this.SendPropertyChanging();
					this._observacion = value;
					this.SendPropertyChanged("observacion");
					this.OnobservacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Users_SSO_Messages_States", Storage="_SSO_Messages_States", ThisKey="id", OtherKey="idUser")]
		public EntitySet<SSO_Messages_States> SSO_Messages_States
		{
			get
			{
				return this._SSO_Messages_States;
			}
			set
			{
				this._SSO_Messages_States.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Users_SSO_Sessions", Storage="_SSO_Sessions", ThisKey="id", OtherKey="userId")]
		public EntitySet<SSO_Sessions> SSO_Sessions
		{
			get
			{
				return this._SSO_Sessions;
			}
			set
			{
				this._SSO_Sessions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_Users_SSO_SMS_Log", Storage="_SSO_SMS_Log", ThisKey="id", OtherKey="sourceUserId")]
		public EntitySet<SSO_SMS_Log> SSO_SMS_Log
		{
			get
			{
				return this._SSO_SMS_Log;
			}
			set
			{
				this._SSO_SMS_Log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSO_SMS_Carriers_SSO_Users", Storage="_SSO_SMS_Carriers", ThisKey="idCarrier", OtherKey="id", IsForeignKey=true)]
		public SSO_SMS_Carriers SSO_SMS_Carriers
		{
			get
			{
				return this._SSO_SMS_Carriers.Entity;
			}
			set
			{
				SSO_SMS_Carriers previousValue = this._SSO_SMS_Carriers.Entity;
				if (((previousValue != value) 
							|| (this._SSO_SMS_Carriers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSO_SMS_Carriers.Entity = null;
						previousValue.SSO_Users.Remove(this);
					}
					this._SSO_SMS_Carriers.Entity = value;
					if ((value != null))
					{
						value.SSO_Users.Add(this);
						this._idCarrier = value.id;
					}
					else
					{
						this._idCarrier = default(Nullable<int>);
					}
					this.SendPropertyChanged("SSO_SMS_Carriers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSO_Messages_States(SSO_Messages_States entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Users = this;
		}
		
		private void detach_SSO_Messages_States(SSO_Messages_States entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Users = null;
		}
		
		private void attach_SSO_Sessions(SSO_Sessions entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Users = this;
		}
		
		private void detach_SSO_Sessions(SSO_Sessions entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Users = null;
		}
		
		private void attach_SSO_SMS_Log(SSO_SMS_Log entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Users = this;
		}
		
		private void detach_SSO_SMS_Log(SSO_SMS_Log entity)
		{
			this.SendPropertyChanging();
			entity.SSO_Users = null;
		}
	}
	
	public partial class sp_SSO_QueueMessageResult
	{
		
		private System.Nullable<int> _messageId;
		
		private System.Nullable<int> _userId;
		
		private string _userName;
		
		private string _userFullname;
		
		private System.Nullable<int> _notificationType;
		
		private string _notificationName;
		
		private System.Nullable<int> _errorType;
		
		private string _errorName;
		
		public sp_SSO_QueueMessageResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageId", DbType="Int")]
		public System.Nullable<int> messageId
		{
			get
			{
				return this._messageId;
			}
			set
			{
				if ((this._messageId != value))
				{
					this._messageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int")]
		public System.Nullable<int> userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this._userId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(MAX)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this._userName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userFullname", DbType="VarChar(MAX)")]
		public string userFullname
		{
			get
			{
				return this._userFullname;
			}
			set
			{
				if ((this._userFullname != value))
				{
					this._userFullname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notificationType", DbType="Int")]
		public System.Nullable<int> notificationType
		{
			get
			{
				return this._notificationType;
			}
			set
			{
				if ((this._notificationType != value))
				{
					this._notificationType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notificationName", DbType="VarChar(MAX)")]
		public string notificationName
		{
			get
			{
				return this._notificationName;
			}
			set
			{
				if ((this._notificationName != value))
				{
					this._notificationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_errorType", DbType="Int")]
		public System.Nullable<int> errorType
		{
			get
			{
				return this._errorType;
			}
			set
			{
				if ((this._errorType != value))
				{
					this._errorType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_errorName", DbType="VarChar(MAX)")]
		public string errorName
		{
			get
			{
				return this._errorName;
			}
			set
			{
				if ((this._errorName != value))
				{
					this._errorName = value;
				}
			}
		}
	}
	
	public partial class SSO_ObtenerEfectoresResult
	{
		
		private string _id;
		
		private string _name;
		
		public SSO_ObtenerEfectoresResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(61)")]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
